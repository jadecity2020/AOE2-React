{"version":3,"sources":["Introduction/Introduction.js","Civilzation/Civilization.js","IndividualCivilization/IndividualCivilization.js","IndividualUnits/IndividualUnits.js","IndividualBldg/IndividualBldg.js","Units/Units.js","Buildings/Buildings.js","Tech/Tech.js","IndividualTech/IndividualTech.js","Ages/Ages.js","About/About.js","App.js","serviceWorker.js","index.js"],"names":["Introduction","className","Civilization","useState","civList","setCivList","useEffect","a","fetch","res","json","civilizations","console","log","makeAPICallCiv","allCiv","map","item","index","key","to","name","IndividualCivilization","props","civDetail","setCivDetail","civTeamBonus","setCivTeamBonus","civUniqueUnit","setCivUniqueUnit","civUniqueTech","setCivUniqueTech","IndCivURL","match","params","civlization","civilization_bonus","unique_unit","unique_tech","makeAPICall","displayCivTeamBonus","bonus","displayCivUniqueUnit","slice","displayCivUniqueTech","team_bonus","IndividualUnits","unitDetail","setUnitDetail","unitCost","setUnitCost","setUnitAttackBonus","IndUnitURL","unit","attack_bonus","cost","displayUnitCost","Food","Wood","Gold","description","attack","armor","bldgAge","setBldgAge","bldgDetail","setBuildingDetail","bldgHP","setBldgHP","bldgArmor","setBldgArmor","handleBldgName","bldg","structures","e","indexOf","age","hit_points","displayBuildingCost","woodCost","foodCost","goldCost","stoneCost","Stone","Units","unitList","setUnitList","units","makeAPICallUnit","allUnits","Buildings","bldgList","setBldgList","makeAPICallBldg","allBldg","Tech","techList","setTechList","technologies","allTechs","techAge","setTechAge","techCost","setTechCost","techDesc","setTechDesc","techLoc","setTechLoc","techDetail","setTechDetail","IndtechURL","tech","develops_in","displayTechCost","Ages","About","App","bldgName","setBldgName","exact","path","component","render","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c1e63b63.chunk.js","sourcesContent":["import React from 'react'\nimport './Introduction.css'\n\nfunction Introduction(){\n    return(\n        <div className='Intro'>\n        <h1 className='intro1'>Collect Resources</h1>\n        <h1 className='intro2'>Train Your Soldiers</h1>\n        <h1 className='intro3'>Conquer Your Enemies</h1>\n        <h1 className='intro4'>Build Your Empire!</h1>\n        </div>\n    )\n}\nexport default Introduction","import React, {useState, useEffect}  from 'react'\nimport { Link } from 'react-router-dom'\nimport './Civilization.css'\n\n// https://cors-anywhere.herokuapp.com/https://age-of-empires-2-api.herokuapp.com/api/v1/civilizations\n\nfunction Civilization () {\n    const [civList, setCivList]= useState([])\n\n    \n    useEffect( ()=>{\n        let civURL='https://cors-anywhere.herokuapp.com/https://age-of-empires-2-api.herokuapp.com/api/v1/civilizations'\n        const makeAPICallCiv = async () => {\n            let res = await fetch(civURL);\n            let json = await res.json();\n            setCivList(json.civilizations)\n            console.log(json)\n        };\n        makeAPICallCiv()\n    },[])  \n\n      let allCiv=civList.map( (item, index)=>{\n          return(\n            <h2 className='Civ-ind-civ' key={index}>\n            <Link to={'/Civilization/'+item.name}>\n                {item.name}\n            </Link>\n            </h2>\n          )\n      })\n      return (\n          <div className='Civ-civ'>\n              {allCiv}\n          </div>\n      )\n}\nexport default Civilization","import React, {useState, useEffect} from 'react'\nimport { dataContext } from \"../App\";\nimport './IndividualCivilization.css'\n\nfunction IndividualCivilization (props){\n    const [civDetail,setCivDetail]= useState({})\n    const [civTeamBonus, setCivTeamBonus]= useState({})\n    const [civUniqueUnit, setCivUniqueUnit]=useState([])\n    const [civUniqueTech, setCivUniqueTech]=useState([])\n    // const DataContext = useContext(dataContext);\n    // console.log(\"Datacontext\", DataContext);\n    useEffect( ()=>{\n        let IndCivURL=`https://cors-anywhere.herokuapp.com/https://age-of-empires-2-api.herokuapp.com/api/v1/civilization/${props.match.params.civlization}`\n            const makeAPICall= async()=>{\n            const res = await fetch(IndCivURL)\n            const json = await res.json()\n            setCivDetail(json)\n            setCivTeamBonus(json.civilization_bonus)\n            setCivUniqueUnit(json.unique_unit)\n            setCivUniqueTech(json.unique_tech)\n        }\n        makeAPICall()\n    },[props.match.params.civlization] )\n    let displayCivTeamBonus = <h1>loading</h1>;\n    if (civTeamBonus[0]) {\n      displayCivTeamBonus = civTeamBonus.map((bonus) => {\n        return <p>{bonus}</p>;\n      });\n    }\n    let displayCivUniqueUnit = <h1>loading</h1>;\n    if (civUniqueUnit[0]) {\n      displayCivUniqueUnit = civUniqueUnit.map((bonus) => {\n        return <p>{bonus.slice(55)}</p>;\n      });\n    }\n    let displayCivUniqueTech = <h1>loading</h1>;\n    if (civUniqueTech[0]) {\n      displayCivUniqueTech = civUniqueTech.map((bonus) => {\n        return <p>{bonus.slice(61)}</p>;\n      });\n    }\n    return (\n        <div className='civ-bonus'>\n        <h1>{civDetail.name}</h1>\n        <h2>Team Bonus: {civDetail.team_bonus}</h2>\n        <h2>Civilization Bonus:</h2>\n        {displayCivTeamBonus}\n        <h2>Unique Unit:</h2>\n        {displayCivUniqueUnit}\n        <h2>Unique Technology:</h2>\n        {displayCivUniqueTech}\n        </div>\n    )\n}\nexport default IndividualCivilization","import React, {useState, useEffect} from 'react'\nimport './IndividualUnits.css'\n\nfunction IndividualUnits (props){\n    const [unitDetail,setUnitDetail]= useState({})\n    const [unitCost, setUnitCost]= useState({})\n    const [unitAttackBonus, setUnitAttackBonus]=useState([])\n\n    useEffect( ()=>{\n        let IndUnitURL=`https://cors-anywhere.herokuapp.com/https://age-of-empires-2-api.herokuapp.com/api/v1/unit/${props.match.params.unit}`\n            const makeAPICall= async()=>{\n            const res = await fetch(IndUnitURL)\n            const json = await res.json()\n            setUnitDetail(json)\n            setUnitAttackBonus(json.attack_bonus)\n            setUnitCost(json.cost)\n        }\n        makeAPICall()\n    },[props.match.params.unit] )\n\n    // let displayUnitAttackBonus = <h1>loading</h1>;\n    // if (unitAttackBonus[0]) {\n    //   displayUnitAttackBonus = unitAttackBonus.map((bonus) => {\n    //     return <p>{bonus}</p>;\n    //   });\n    // }\n    let displayUnitCost=<p>Loading Cost</p>\n    if(unitCost){\n    if(!unitCost.Food){\n      displayUnitCost=<p>Cost- Wood: {unitCost.Wood} Gold: {unitCost.Gold}</p>\n    } else if (!unitCost.Wood){\n      displayUnitCost=<p>Cost- Food: {unitCost.Food} Gold: {unitCost.Gold}</p>\n    } else if (!unitCost.Gold){\n      displayUnitCost=<p>Cost- Food: {unitCost.Food} Wood: {unitCost.Wood}</p>\n    } else {\n      displayUnitCost=<p>Cost- Food: {unitCost.Food} Wood: {unitCost.Wood} Gold: {unitCost.Gold}</p>\n    }\n  }\n    \n    return (\n        <div className='ind-unit'>\n        <h1>{unitDetail.name}</h1>\n        <h2>'{unitDetail.description}'</h2>\n        <h2>Attack: {unitDetail.attack}</h2>\n        <h2>Armor(Melee/Pierce): {unitDetail.armor}</h2>\n        {displayUnitCost}\n        </div>\n    )\n}\nexport default IndividualUnits","import React, {useState, useEffect} from 'react'\nimport { dataContext } from \"../App\";\nimport './IndividualBldg.css'\n\nfunction IndividualCivilization (props){\n    const [bldgAge,setBldgAge]= useState('')\n    // const [bldgDetail, setBuildingDetail]= useState({})\n    const [bldgDetail, setBuildingDetail]=useState([])\n    const [bldgHP, setBldgHP]=useState(0)\n    const [bldgArmor,setBldgArmor]= useState('')\n    // const DataContext = useContext(dataContext);\n    // console.log(\"Datacontext\", DataContext);\n    props.handleBldgName(props.match.params.bldg)\n    useEffect( ()=>{\n        let IndBldgURL=`https://cors-anywhere.herokuapp.com/https://age-of-empires-2-api.herokuapp.com/api/v1/structures`\n            const makeAPICall= async()=>{\n            const res = await fetch(IndBldgURL)\n            const json = await res.json()\n            console.log('bldg API call',json)\n            setBuildingDetail(json.structures)\n            let index=json.structures.map(e=>{return e.name}).indexOf(props.match.params.bldg) \n            setBldgAge(json.structures[index].age)\n            setBldgArmor(json.structures[index].armor)\n            setBldgHP(json.structures[index].hit_points)\n        }\n        makeAPICall()\n    },[props.match.params.bldg])\n\n    let index\n    if(bldgDetail){\n    index=bldgDetail.map(e=>{return e.name}).indexOf(props.match.params.bldg) \n  }\n \n    let displayBuildingCost = <h1>loading</h1>;\n    let woodCost=''\n    let foodCost=''\n    let goldCost=''\n    let stoneCost=''\n    if (bldgDetail[index]) {\n      if(bldgDetail[index].cost.Wood){\n        woodCost=`Wood: ${bldgDetail[index].cost.Wood}`\n      }\n      if (bldgDetail[index].cost.Food) {\n        foodCost=`Food: ${bldgDetail[index].cost.Food}`\n      }\n      if (bldgDetail[index].cost.Gold) {\n        goldCost=`Gold: ${bldgDetail[index].cost.Gold}`\n      }\n      if (bldgDetail[index].cost.Stone) {\n        stoneCost=`Stone: ${bldgDetail[index].cost.Stone}`\n      }\n    }\n    if(bldgDetail[index]){\n      displayBuildingCost=<h2>Cost- {foodCost} {woodCost} {goldCost} {stoneCost}</h2>\n    }\n\n    return (\n        <div className='bldg'>\n          <h1>{props.match.params.bldg}</h1>\n          {displayBuildingCost}\n          <h2>Available Age: {bldgAge} Age</h2>\n          <h2>Hit Point: {bldgHP}</h2>\n          <h2>Armor: {bldgArmor}</h2> \n        </div>\n    )\n}\nexport default IndividualCivilization","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport './Units.css'\n\nfunction Units (){\n    const [unitList,setUnitList] = useState([])\n    useEffect( ()=>{\n        let unitURL='https://cors-anywhere.herokuapp.com/https://age-of-empires-2-api.herokuapp.com/api/v1/units'\n        const makeAPICallUnit = async () => {\n            let res = await fetch(unitURL);\n            let json = await res.json();\n            setUnitList(json.units)\n        };\n        makeAPICallUnit()\n    },[])  \n    let allUnits=unitList.map( (item, index)=>{\n        return(\n          <p className='Unit-ind-civ' key={index}>\n          <Link to={'/Units/'+item.name}>\n              {item.name}\n          </Link>\n          </p>\n        )\n    })\n    return(\n        <div className='Unit-units'>\n        {allUnits}\n    </div>\n    )\n}\n\nexport default Units","import React, {useState, useEffect}  from 'react'\nimport { Link } from 'react-router-dom'\nimport './Buildings.css'\n\n// https://cors-anywhere.herokuapp.com/https://age-of-empires-2-api.herokuapp.com/api/v1/civilizations\n\nfunction Buildings () {\n    const [bldgList, setBldgList]= useState([])\n\n    \n    useEffect( ()=>{\n        let bldgURL='https://cors-anywhere.herokuapp.com/https://age-of-empires-2-api.herokuapp.com/api/v1/structures'\n        const makeAPICallBldg = async () => {\n            let res = await fetch(bldgURL);\n            let json = await res.json();\n            setBldgList(json.structures)\n        };\n        makeAPICallBldg()\n    },[])  \n\n      let allBldg=bldgList.map( (item, index)=>{\n          return(\n            <h2 className='Bldg-ind-bldg' key={index}>\n            <Link to={'/Buildings/'+item.name}>\n                {item.name}\n            </Link>\n            </h2>\n          )\n      })\n      return (\n          <div className='all-Bldg'>\n              {allBldg}\n          </div>\n      )\n}\nexport default Buildings","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport './Tech.css'\n\nfunction Tech (){\n    const [techList,setTechList] = useState([])\n    useEffect( ()=>{\n        let techURL='https://cors-anywhere.herokuapp.com/https://age-of-empires-2-api.herokuapp.com/api/v1/technologies'\n        const makeAPICallUnit = async () => {\n            let res = await fetch(techURL);\n            let json = await res.json();\n            setTechList(json.technologies)\n        };\n        makeAPICallUnit()\n    },[])  \n    let allTechs=techList.map( (item, index)=>{\n        return(\n          <p className='ind-tech' key={index}>\n          <Link to={'/Technology/'+item.name}>\n              {item.name}\n          </Link>\n          </p>\n        )\n    })\n    return(\n        <div className='techs'>\n        {allTechs}\n    </div>\n    )\n}\nexport default Tech","import React, {useState, useEffect} from 'react'\nimport './IndividualTech.css'\n\nfunction IndividualUnits (props){\n    const [techAge, setTechAge]= useState('')\n    const [techCost, setTechCost]= useState({})\n    const [techDesc, setTechDesc]=useState('')\n    const [techLoc, setTechLoc]=useState('')\n    const [techDetail, setTechDetail]=useState({})\n    // props.handleUnitName(props.match.params.unit)\n    useEffect( ()=>{\n        let IndtechURL=`https://cors-anywhere.herokuapp.com/https://age-of-empires-2-api.herokuapp.com/api/v1/technology/${props.match.params.tech}`\n            const makeAPICall= async()=>{\n            const res = await fetch(IndtechURL)\n            const json = await res.json()\n            console.log('ind tech', json)\n            console.log(json.age)\n            setTechDetail(json)\n            setTechAge(json.age)\n            setTechCost(json.cost)\n            setTechDesc(json.description)\n            setTechLoc(json.develops_in.slice(60))\n        }\n        makeAPICall()\n    },[props.match.params.tech] )\n\n    let displayTechCost = <h1>loading</h1>;\n    let woodCost=''\n    let foodCost=''\n    let goldCost=''\n    let stoneCost=''\n\n    if (techDetail) {\n      if(techCost.Wood){\n        woodCost=`Wood: ${techCost.Wood}`\n      }\n      if (techCost.Food) {\n        foodCost=`Food: ${techCost.Food}`\n      }\n      if (techCost.Gold) {\n        goldCost=`Gold: ${techCost.Gold}`\n      }\n      if (techCost.Stone) {\n        stoneCost=`Stone: ${techCost.Stone}`\n      }\n    }\n    if(techDetail){\n      displayTechCost=<h2>Cost- {foodCost} {woodCost} {goldCost} {stoneCost}</h2>\n    }\n    return (\n        <div className='ind-unit'>\n          <h1>{props.match.params.tech}</h1>\n          <h2>'{techDesc}'</h2>\n          {displayTechCost}\n          <h2>Available at the {techLoc}</h2>\n          <h2>Available during {techAge} Age</h2>\n        </div>\n    )\n}\nexport default IndividualUnits","import React from 'react'\nimport './Ages.css'\n\nfunction Ages(){\n    return(\n        <div className='About'>\n        <h1 className='dark'>Dark Age: Hunter and Gatherer Phase</h1>\n        <h1 className='feudal'>Feudual Age: Farming and Mining Phase</h1>\n        <h1 className='castle'>Castle Age: Training and Deployment Phase</h1>\n        <h1 className='imperial'>Imperial Age: I come, I see, I CONQUER!</h1>\n        </div>\n    )\n}\nexport default Ages","import React from 'react'\nimport './About.css'\n\nfunction About(){\n    return(\n        <div className='about'>\n        <h1 className='about-aoe'>\n            Age of Empires II is a real time strategy game. You can select from 18 civilizations and fight against other civilization in a custom made map or a real world location map. \n        </h1>\n        <h1 className='about-aoe'>\n            Gather your resources, Train your soldiers, conquer your enemies and\n        </h1>\n        <h1 className='about-aoe'>\n            BUILD YOUR EMPIRE! \n        </h1>\n        </div>\n    )\n}\nexport default About","import React, {useState, createContext} from 'react';\nimport './App.css';\nimport Introduction from './Introduction/Introduction';\nimport {Route, Link} from 'react-router-dom'\nimport Civilization from './Civilzation/Civilization';\nimport IndividualCivilization from './IndividualCivilization/IndividualCivilization';\nimport IndividualUnits from './IndividualUnits/IndividualUnits'\nimport IndividualBldg from './IndividualBldg/IndividualBldg'\nimport Units from './Units/Units'\nimport Buildings from './Buildings/Buildings'\nimport Tech from './Tech/Tech'\nimport IndividualTech from './IndividualTech/IndividualTech'\nimport Ages from './Ages/Ages'\nimport About from './About/About'\n\n// export const dataContext = createContext();\n\nfunction App() {  \n  const[bldgName,setBldgName]=useState('')\n  const handleBldgName=name=>setBldgName(name)\n  return (\n    <div className=\"App\">\n      {/* <dataContext.Provider value={ {handleCivName, handleUnitName, civName, unitName} }> */}\n      <div>\n        <nav className='navbar'>\n          <Link to='/'>\n            <h1>Age of Empires II: The Conquerors</h1>\n          </Link>   \n            <ul className='navbar-selection'>\n              <Link to='/Civilization'><li>Civilization</li></Link>\n              <Link to='/Units'><li>Units</li></Link>\n              <Link to='/Buildings'><li>Buildings</li></Link>\n              <Link to='/Technology'><li>Technology</li></Link>\n              <Link to='/Ages'><li>Ages</li></Link>\n              <Link to='/About'><li>About</li></Link>\n            </ul>\n        </nav>   \n      </div>\n      <main>\n        <Route exact path='/' component={Introduction} />\n        <Route exact path='/Civilization' component={Civilization} />\n        <Route exact path='/Civilization/:civlization'\n          render={ (props)=>\n          <IndividualCivilization {...props}\n          />}/>\n        <Route exact path='/Units' component={Units}/>\n        <Route exact path='/Units/:unit'\n          render={ (props)=>\n          <IndividualUnits {...props}\n          />}/>\n        <Route exact path='/Buildings' component={Buildings} />\n        <Route exact path='/Buildings/:bldg'\n          render={ (props)=>\n          <IndividualBldg {...props}\n          handleBldgName={handleBldgName}\n          bldgName={bldgName}\n          />}/>\n        <Route exact path='/Technology' component={Tech} />\n        <Route exact path='/Technology/:tech'\n          render={ (props)=>\n          <IndividualTech {...props}\n          // handleBldgName={handleBldgName}\n          // bldgName={bldgName}\n          />}/>\n          <Route exact path='/Ages' component={Ages} />\n          <Route exact path='/About' component={About} />\n        {/* </dataContext.Provider> */}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n  <Router>\n    <App />\n    </Router>,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}